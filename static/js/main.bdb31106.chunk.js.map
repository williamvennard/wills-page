{"version":3,"sources":["images/snake-project.png","images/gradient-one-plot.png","images/travel-plan.jpg","images/blue-man.jpg","images/airplane.jpg","Home.js","Thumbnail.js","Projects.js","SnakeApp.js","Snake.js","Map.js","Planit.js","About.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoadAnimation","props","state","isPaused","data","colorPallet","colorPallets","squareDim","numberOfDivistions","patterns","passiveAnimation","bind","this","startAnimation","width","svgWidth","height","svgHeight","iy","ix","x","y","square","x1","Math","floor","random","y1","x2","y2","push","console","warn","i","isRipple","randomColorIdx","length","d3","transition","duration","style","attr","neighbors","xIndex","dataIdx","yIndex","indexOf","neighbor","mouseoverAnimation","pattern","frameIndex","flyIn","frame","frames","svg","remove","squareIdx","rect","setTimeout","append","that","curIndex","setInterval","drawMosaic","advancePatternFrame","row","adjustedIdx","idx","delay","colorPalletKeys","Object","keys","randomColorPallet","svgDiv","document","getElementById","generateDataPoints","space_invader","startMosaicAnimation","drawRectangle","randomColor","text","on","id","React","Component","Home","className","OrderedList","listItems","list","map","item","key","toString","Thumbnail","externalLink","href","link","src","image","alt","to","Content","title","description","tools","backgroundStyle","Projects","margin","d3PlotThumbnail","planitThumbnail","snakeThumbnail","directionHelper","direction","snakeGame","snakeDirection","touchHandler","e","preventDefault","touches","view","innerWidth","innerHeight","pageX","pageY","SnakeGame","playing","count","foodCord","headCord","snakeBody","foodOnBoard","score","speed","snakeTail","lastSnakeDirection","gameTicker","segmentDim","boardWidth","boardHeight","segmentRadius","bombCount","addEventListener","event","spawnFood","gameTick","segDim","round","randomBoardCord","index","cord","nextIdx","oldCord","moveSnake","clearTimeout","log","paused","undefined","snakeBombs","SnakeBombs","liveBomb","slowCount","bombGoesBoom","spawnBomb","gameLost","segment","bombCord","explosionRadius","colorScale","domain","range","explosionArea","start","xDim","yDim","newCord","includes","block","distance","distanceBetweenPoints","isHeadInExplosion","bombR","explosionXRange","explosionYRange","detectX","detectY","pointA","pointB","x0","y0","pow","startGame","initGame","pauseGame","PauseGame","handleClick","setState","onClick","Snake","dx","dy","Geocode","setApiKey","enableDebug","require","compose","withProps","lifecycle","StandaloneSearchBox","MyMapComponent","withScriptjs","withGoogleMap","defaultZoom","center","PlacesWithStandaloneSearchBox","googleMapURL","loadingElement","containerElement","componentWillMount","refs","showPosition","position","firstPlaceLat","coords","latitude","firstPlaceLng","longitude","places","firstPlace","getCurrentLocation","navigator","geolocation","getCurrentPosition","zoon","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","lat","lng","data-standalone-searchbox","bounds","type","placeholder","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","mapElement","containerStyles","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","onClose","display","About","Img","Footer","aria-labelledby","role","viewBox","d","backgroundAttachment","backgroundSize","MainContent","App","basename","path","component","Planit","exact","Boolean","window","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdb31106.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snake-project.f5fe54ec.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-one-plot.a3224cd9.png\";","module.exports = __webpack_public_path__ + \"static/media/travel-plan.ae84d7db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue-man.615a2609.jpg\";","module.exports = __webpack_public_path__ + \"static/media/airplane.a65cfd90.jpg\";","import React from \"react\"\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass LoadAnimation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isPaused: true};\n        this.data = [];\n        this.colorPallet = ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'];\n        this.colorPallets = {\n            'sunset': ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'],\n            'blues': ['#7400B8', '#6930C3', '#5E60CE', '#5390D9', '#4EA8DE', '#48BFE3', '#56CFE1', '#64DFDF', '#72EFDD', '#80FFDB'],\n            'fire': ['#370617', '#6A040F', '#9D0208', '#D00000', '#DC2F02', '#E85D04', '#F48C06', '#FAA307', '#FFBA08'],\n            'sunrise': ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590']\n        }\n        this.squareDim = {};\n        this.numberOfDivistions = 40;\n        // only for this.numberOfDivistions = 40;\n        this.patterns = {\n            'space_invader': {\n                'frames':[\n                    [657, 663, 698, 702,\n                    737, 738, 739, 740, 741, 742, 743,\n                    776, 777, 779, 780, 781, 783, 784,\n                    815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825,\n                    855, 857, 858, 859, 860, 861, 862, 863, 865,\n                    895, 897, 903, 905,\n                    938, 939, 941, 942],\n                    [657, 663, 695, 698, 702, 705,\n                    735, 737, 738, 739, 740, 741, 742, 743, 745,\n                    775, 776, 777, 779, 780, 781, 783, 784, 785,\n                    815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825,\n                    856, 857, 858, 859, 860, 861, 862, 863, 864,\n                    897, 903,\n                    936, 944]\n                ]\n            }\n        }\n\n\n        // This binding is necessary to make `this` work in the callback\n        this.passiveAnimation = this.passiveAnimation.bind(this);\n    }\n\n    componentDidMount() {\n        this.startAnimation()\n    }\n\n    generateDataPoints() {\n        this.data = [];\n        this.squareDim.width = this.svgWidth/(this.numberOfDivistions);\n        this.squareDim.height = this.svgHeight/(this.numberOfDivistions);\n        // y axis\n        for (let iy = 0; iy < this.numberOfDivistions; iy++) {\n            // x axis\n            for (let ix = 0; ix < this.numberOfDivistions; ix++) {\n                let x = ix*this.squareDim.width;\n                let y = iy*this.squareDim.height;\n                // random first position and ordered grid as second positoin\n                let square = {\n                    x1: Math.floor(Math.random() * this.svgWidth),\n                    y1: Math.floor(Math.random() * this.svgHeight),\n                    x2: x,\n                    y2: y,\n                }\n                this.data.push(square)\n            }\n        }\n        console.warn(\"DEBUG DEBUG generateDataPoints: this.data = \", this.data)\n    }\n\n    mouseoverAnimation(i, isRipple) {\n        let random = Math.random();\n        let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = d3.select(\"#rect\" +i)\n        rect.transition()\n            .duration(500)\n            .style(\"opacity\", random)\n            .attr(\"fill\", this.colorPallet[randomColorIdx])\n            .attr(\"x\", this.data[i].x1)\n            .attr(\"y\", this.data[i].y1)\n            .transition()\n            .duration(1500)\n            .style(\"opacity\", 1)\n            .attr(\"x\", this.data[i].x2)\n            .attr(\"y\", this.data[i].y2)\n\n        // create ripple effect\n        if(!isRipple) {\n            const radius = 1;\n            let neighbors = [];\n            for(let xIndex = -radius; xIndex <= radius; xIndex++) {\n                let dataIdx = +i+xIndex;\n                for(let yIndex = -radius; yIndex <= radius; yIndex++) {\n                    dataIdx = dataIdx - (yIndex*this.numberOfDivistions)\n                    // if in bounds\n                    if(dataIdx >= 0 && dataIdx<this.data.length && neighbors.indexOf(dataIdx)) {\n                        neighbors.push(dataIdx)\n                    }\n                }\n            }\n            let isRipple = true;\n            for(let neighbor of neighbors) {\n                this.mouseoverAnimation(neighbor, isRipple)\n                // setTimeout(() => {  this.mouseoverAnimation(neighbor, isRipple) }, 10);\n            }\n        }\n    }\n\n    mouseoutAnimation(i, isRipple) {\n        let random = Math.random();\n        let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = d3.select(\"#rect\" +i)\n        rect.transition()\n            .duration(1000)\n            .style(\"opacity\", 1)\n            .attr(\"fill\", this.colorPallet[randomColorIdx])\n    }\n\n    drawMosaic(pattern, frameIndex, flyIn) {\n        let frame = pattern.frames[frameIndex];\n        let svg = d3.select('#animationSVG');\n        d3.selectAll('.mosaic').remove();\n        for(let squareIdx of frame) {\n            let rect = this.data[squareIdx];\n            let random = Math.random();\n            // let rect = d3.select(\"#rect\"+squareIdx).style(\"opacity\", 1)\n            // rect.style(\"fill\", \"black\")\n            //     .style(\"opacity\", 0.5)\n\n            if(flyIn) {\n                setTimeout(() => {\n                    svg.append('rect')\n                        .attr('class', 'mosaic')\n                        .attr(\"x\", Math.floor(Math.random() * this.svgWidth))\n                        .attr(\"y\", Math.floor(Math.random() * this.svgHeight))\n                        .attr(\"width\", this.squareDim.width)\n                        .attr(\"height\", this.squareDim.width)\n                        .attr('fill', 'black')\n                        .style(\"opacity\", 0)\n                        .transition()\n                        .duration(1000)\n                        .attr(\"x\", rect.x2)\n                        .attr(\"y\", rect.y2)\n                        .style(\"opacity\", 1)\n                 }, 100);\n            } else {\n                svg.append('rect')\n                    .attr('class', 'mosaic')\n                    .attr(\"x\", rect.x2)\n                    .attr(\"y\", rect.y2)\n                    .attr(\"width\", this.squareDim.width)\n                    .attr(\"height\", this.squareDim.width)\n                    .attr('fill', 'black')\n            }\n\n\n        }\n    }\n\n    startMosaicAnimation(pattern) {\n        let that = this;\n        let curIndex = 0;\n        function advancePatternFrame(pattern, that) {\n            console.warn(\"advancePatternFrame: pattern\", pattern)\n            console.warn(\"advancePatternFrame: curIndex \", curIndex)\n            if (curIndex >= pattern.frames.length) {\n                curIndex = 0;\n            }\n            that.drawMosaic(pattern, curIndex)\n            ++curIndex;\n        }\n        let intervalID = setInterval(function(){advancePatternFrame(pattern, that)}, 1000);\n    }\n\n    moveMosaic(pattern, row) {\n        this.row++;\n        if(this.row > this.numberOfDivistions) {\n            // this.moveMosaicInterval.inve\n            return\n        }\n        console.warn(\"moveMosaic! pattern, row =\", pattern)\n        console.warn(\"moveMosaic! row =\",  this.row)\n        let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n\n        d3.selectAll('.mosaic').remove();\n\n        for(let squareIdx of pattern) {\n            let adjustedIdx = squareIdx+40*this.row;\n            setTimeout(() => {\n                let rect = this.data[adjustedIdx]\n                let svg = d3.select('#animationSVG')\n                svg.append('rect')\n                    .attr('class', 'mosaic')\n                    .attr(\"x\", rect.x2)\n                    .attr(\"y\", rect.y2)\n                    .attr(\"width\", this.squareDim.width)\n                    .attr(\"height\", this.squareDim.width)\n                    .attr('fill', 'black')\n\n            }, 50);\n        }\n    }\n\n    passiveAnimation() {\n        let that = this;\n        for(let idx in this.data) {\n            let random = Math.random();\n            let rect = d3.select(\"#rect\"+idx)\n            rect.transition()\n                .delay(1000*random)\n                .duration(1000)\n                .style(\"opacity\", 0.8)\n                .transition()\n                .duration(1000)\n                .style(\"opacity\", 1)\n        }\n    }\n\n    startAnimation() {\n        // set random color pallet\n        let colorPalletKeys = Object.keys(this.colorPallets)\n        let randomColorPallet = Math.floor(Math.random() * colorPalletKeys.length);\n        this.colorPallet = this.colorPallets[colorPalletKeys[randomColorPallet]];\n        console.warn(\"DEBUG colorPalletKeys =\", colorPalletKeys)\n        console.warn(\"DEBUG this.colorPallet =\", this.colorPallet)\n        // setup SVG and begin drawing rectangles\n        let svgDiv = document.getElementById(\"home-animation\");\n        this.svgWidth = 500;\n        this.svgHeight = 500;\n        let that = this;\n        let svg = d3.select(svgDiv).append(\"svg\")\n            .attr(\"id\", \"animationSVG\")\n            .attr(\"width\", this.svgWidth)\n            .attr(\"height\", this.svgHeight)\n\n        this.generateDataPoints();\n        let pattern = this.patterns.space_invader;\n        this.drawMosaic(pattern, 0, true);\n        this.startMosaicAnimation(pattern)\n        for(let idx in this.data) {\n            setTimeout(() => {  this.drawRectangle(svg, idx) }, 10);\n        }\n\n\n        // // start passive animation\n        // let that = this;\n        // setTimeout(() => {  setInterval(that.passiveAnimation, 2500); }, 10*that.data.length);\n    }\n\n    drawRectangle(svg, idx) {\n        let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = this.data[idx];\n        let that = this;\n\n        svg.append(\"rect\")\n            .attr(\"id\", \"rect\" + idx)\n            .attr(\"class\", \"animation-rect\")\n            .attr(\"x\", rect.x1)\n            .attr(\"y\", rect.y1)\n            .attr(\"width\", 1)\n            .attr(\"height\", 1)\n            .attr(\"fill\", this.colorPallet[randomColor])\n            .text(idx)\n            .style(\"opacity\", 0)\n            .on(\"mouseover\", function() { that.mouseoverAnimation(idx) })\n            // .on(\"mouseout\", function() { that.mouseoutAnimation(idx) })\n            .transition()\n            .duration(1500)\n            .attr(\"width\", this.squareDim.width)\n            .attr(\"height\", this.squareDim.height)\n            .style(\"opacity\", 1)\n            .attr(\"y\", rect.y2)\n            .attr(\"x\", rect.x2)\n    }\n\n    render() {\n        return (\n            <div id=\"home-animation\"></div>\n        );\n    }\n}\n\n\nfunction Home(props) {\n  return (\n  \t<div className=\"container-fluid\">\n        <LoadAnimation/>\n\t    <div className=\"col-6 home-section\">\n\t      <h1>William Vennard</h1>\n\t      <h2>Web Developer & Mechanical Engineer</h2>\n\t    </div>\n\t    <div className=\"contact-btn\">\n\t    \t<button className=\"btn btn-outline-light\">Contact Me</button>\n\t    </div>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react'; // Import the Component component from React\nimport {Link} from 'react-router-dom'; // Import the Link component\nimport './App.css';\n\nfunction OrderedList(props) {\n  const list = props.list;\n  const listItems = list.map((item) =>\n    <li key={item.toString()}>{ item }</li>\n  );\n  return (\n    <ul>{ listItems }</ul>\n  );\n}\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <div className=\"project-title\"><h4>{this.props.title}</h4></div>\n          <p>{this.props.description}</p>\n          <p> Tools Used: </p>\n          <OrderedList list={ this.props.tools } />,\n        </div>\n        <div className=\"col-8\">\n          <Thumbnail props={ this.props }/>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nfunction Thumbnail(props) {\n  // use a tag if using extenal link\n  if(props.props.externalLink === \"true\") {\n    return (\n      <div className=\"project\">\n        <a href={props.props.link}>\n          <div className=\"project-image\">\n            <img src={props.props.image} alt=\"Project Thumbnail\"/>\n          </div>\n        </a>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"project\">\n        <Link to={props.props.link}>\n          <div className=\"project-image\">\n            <img src={props.props.image} alt=\"Project Thumbnail\"/>\n          </div>\n\n        </Link>\n      </div>\n    );\n  }\n\n}\n\nexport default Content;","\nimport React from \"react\"\nimport Thumbnail from './Thumbnail.js'; // Import the Thumbnail component\nimport './App.css';\nimport snakeThumbnail from './images/snake-project.png';\nimport d3PlotThumbnail from './images/gradient-one-plot.png';\n\nimport planitThumbnail from './images/travel-plan.jpg';\n\nimport Background from './images/airplane.jpg';\n\nlet backgroundStyle = {\n\t//backgroundImage: `linear-gradient(to bottom right, red, yellow)`,\n  // backgroundImage: `url(${Background})`,\n  // backgroundAttachment: 'fixed',\n  // backgroundRepeat: `no-repeat, repeat`,\n  // backgroundSize: `100%`,\n};\n\nfunction Projects(props) {\n  return (\n    <div className=\"container-fluid project-container\" style={ backgroundStyle }>\n    \t<div style={{ margin: `20px` }}>\n    \t\t<h1>Projects</h1>\n    \t</div>\n    \t<div className=\"row\">\n\t\t    <div className=\"col-12 projects-row\">\n\t    \t\t<Thumbnail\n\t\t\t  \t\tlink=\"https://examples.gradientone.com/results/R4573773855883741\"\n\t\t\t  \t\timage={d3PlotThumbnail}\n\t\t\t  \t\ttitle=\"Interactive D3 Plot\"\n\t\t\t  \t\texternalLink = \"true\"\n\t\t\t  \t\ttools={ ['D3', 'Angular', 'JS'] }\n\t\t\t  \t\tdescription=\"Oscilloscope data plotted using D3. Features include dynamic zoom, auto reduction, markers, and more.\"\n\t\t\t\t\t/>\n\t\t    </div>\n\t\t    <div className=\"col-12 projects-row\">\n\t\t      <Thumbnail\n\t\t\t  \t\tlink=\"/planit\"\n\t\t\t  \t\timage={planitThumbnail}\n\t\t\t  \t\ttitle=\"Maps Project\"\n\t\t\t  \t\texternalLink = \"false\"\n\t\t\t  \t\ttools={ ['Google Maps API', 'React', 'JS'] }\n\t\t\t  \t\tdescription=\"Travel planing application demonstating react-google-maps and the Google Maps API.\"\n\t\t\t\t\t/>\n\t\t    </div>\n\t\t    <div className=\"col-12 projects-row\">\n\t\t    \t<Thumbnail\n\t\t\t  \t\tlink=\"/snake\"\n\t\t\t  \t\timage={snakeThumbnail}\n\t\t\t  \t\ttitle=\"Play Snake\"\n\t\t\t  \t\texternalLink = \"false\"\n\t\t\t  \t\ttools={ ['D3', 'JS'] }\n\t\t\t  \t\tdescription=\"The classic arcade game you know and love. Plus bombs!\"\n\t\t\t\t\t/>\n\t\t    </div>\n\t\t  </div>\n    </div>\n  )\n}\n\nexport default Projects;","import * as d3 from \"d3\";\n\nfunction initKeyBindings () {\n  document.addEventListener('keydown', (event) => {\n    if(event.key === 'ArrowLeft' || event.key === 'ArrowUp' || event.key === 'ArrowRight' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      snakeGame.snakeDirection = directionHelper(event.key)\n    }\n  });\n  document.addEventListener(\"touchstart\", touchHandler);\n}\n\n// makes sure you cant double back on yourself\nfunction directionHelper(direction) {\n  if (snakeGame.snakeDirection === 'ArrowLeft' && direction === 'ArrowRight') { return snakeGame.snakeDirection }\n  if (snakeGame.snakeDirection === 'ArrowRight' && direction === 'ArrowLeft') { return snakeGame.snakeDirection }\n  if (snakeGame.snakeDirection === 'ArrowUp' && direction=== 'ArrowDown') { return snakeGame.snakeDirection }\n  if (snakeGame.snakeDirection === 'ArrowDown' && direction === 'ArrowUp') { return snakeGame.snakeDirection }\n    return direction\n}\n\n// for mobile devices\nfunction touchHandler(e) {\n  e.preventDefault();\n  if(e.touches) {\n    let width = e.view.innerWidth;\n    let height = e.view.innerHeight;\n    let x = e.touches[0].pageX \n    let y = e.touches[0].pageY \n    let direction;\n    if (x<width/3) {\n      direction = 'ArrowLeft';\n    } else if (x>(width - width/3)) {\n      direction = 'ArrowRight';\n    } else if (y<height/3) {\n      direction = 'ArrowUp';\n    } else {\n      direction = 'ArrowDown';\n    }\n    snakeGame.snakeDirection = directionHelper(direction)\n  }\n}\n\nclass SnakeGame {\n  constructor() {\n    this.playing = false;\n    this.count = 0;\n    this.foodCord = [];\n    this.headCord = [];\n    this.snakeBody = [];\n    this.foodOnBoard = false;\n    this.score = 0;\n    this.speed = 200;\n    this.snakeTail = [];\n    this.snakeDirection = 'ArrowRight';\n    this.lastSnakeDirection = '';\n    this.gameTicker = \"\";\n    this.segmentDim = 10;\n    this.boardWidth = 300;\n    this.boardHeight = 300;\n    this.segmentRadius = 5;\n\n  }\n\n  // Might be a better way to do this.\n  // put into another class and simply reset?\n  initGame() {\n    d3.selectAll(\".game-intro\").remove();\n    d3.select('#score').style(\"display\", \"block\")\n    d3.select('#start-game').style(\"display\", \"none\")\n    d3.select('#board').remove();\n    d3.select('#end-text').remove();\n    this.headCord = [0,0];\n    this.snakeBody = [];\n    this.score = 0;\n    this.speed = 200;\n    this.bombCount = 0\n    this.snakeDirection = 'ArrowRight';\n    this.snakeBody.push(this.headCord);\n    this.playing = true;\n\n    initKeyBindings();\n\n    d3.select('#game-space')\n      .append('svg')\n      .attr('id', 'board')\n      .attr('width', this.boardWidth)\n      .attr('height', this.boardHeight)\n      .append('rect')\n      .attr('class', 'snake head')\n      .attr(\"id\", \"segment\" + (this.snakeBody.length-1))\n      .attr('width', this.segmentDim)\n      .attr('height', this.segmentDim)\n      .attr('x', this.headCord[0])\n      .attr('y', this.headCord[1])\n      .attr(\"ry\", this.segmentRadius)\n      .attr(\"rx\", this.segmentRadius)\n      .attr('fill', 'red')\n\n    // do this with d3\n    d3.select('#score-count')\n      .text(this.score)\n\n    d3.select('#pause-game')\n      .style(\"display\", \"block\")\n\n    this.spawnFood();\n    this.gameTick();\n  }\n\n  randomBoardCord() {\n    let segDim = this.segmentDim;\n    let x = (Math.round(Math.random()*this.boardWidth/segDim)*segDim) - segDim;\n    let y = (Math.round(Math.random()*this.boardHeight/segDim)*segDim) - segDim;\n    // keep food on map\n    if (x > this.boardWidth) { x = this.boardWidth - segDim}\n    if (x < 0) { x = 0 }\n    if (y > this.boardHeight) {y = this.boardHeight - segDim}\n    if (y < 0) { y = 0 }\n\n    return [x,y];\n  }\n\n  spawnFood() {\n    this.foodCord = this.randomBoardCord()\n\n    d3.select('#board').append('rect')\n      .attr(\"id\", \"food\")\n      .attr(\"width\", this.segmentDim)\n      .attr(\"height\", this.segmentDim)\n      .attr(\"x\", this.foodCord[0])\n      .attr(\"y\", this.foodCord[1])\n      .attr(\"ry\", this.segmentRadius)\n      .attr(\"rx\", this.segmentRadius)\n      .attr(\"fill\", \"limegreen\")\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(1000)\n      .style(\"opacity\", 1)\n\n    this.foodOnBoard = true;\n  }\n\n  moveSnake(index, cord) {\n    d3.select('#segment' + index)\n      .attr(\"x\", cord[0])\n      .attr(\"y\", cord[1]);\n\n    if (+index !== this.snakeBody.length-1) {\n      let nextIdx = index + 1;\n      let oldCord = this.snakeBody[index];\n      this.moveSnake(nextIdx, oldCord)\n    }\n    this.snakeBody[index] = [cord[0], cord[1]];\n  }\n\n  gameLost() {\n    clearTimeout(this.gameTicker);\n    console.log('Game over.')\n    if(!this.playing) { return; }\n    this.playing = false;\n\n    // remove old stuff and show game over\n    d3.select('#food').transition()\n      .duration(1000)\n      .style(\"opacity\", 0)\n      .remove();\n\n    d3.selectAll(\".snake\").transition()\n      .duration(1000)\n      .style(\"opacity\", 0)\n      .remove();\n\n    d3.select('#bomb-text').remove();\n\n    d3.select('#bomb')\n      .transition()\n      .duration(1000)\n      .style(\"opacity\", 0)\n      .remove();\n\n    d3.select('#end-text').remove();\n    d3.select('#game-space')\n      .append('h3')\n      .text('GAME OVER')\n      .attr('id', 'end-text')\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(1000)\n      .style(\"opacity\", 1)\n\n    d3.select('#pause-game')\n      .style(\"display\", \"none\")\n\n    d3.select('#start-game')\n      .style(\"display\", \"block\")\n      \n  }\n\n  gameTick() {\n    if(this.paused) {\n      return\n    }\n    this.count++;\n    if(this.snakeDirection === 'ArrowLeft') {\n      this.headCord[0] = this.headCord[0] - this.segmentDim;\n    }else if(this.snakeDirection === 'ArrowUp') {\n      this.headCord[1] = this.headCord[1] - this.segmentDim;\n    }else if(this.snakeDirection === 'ArrowRight') {\n      this.headCord[0] = this.headCord[0] + this.segmentDim;\n    }else if(this.snakeDirection === 'ArrowDown') {\n      this.headCord[1] = this.headCord[1] + this.segmentDim;\n    }\n    //headCord = [0,0]\n    this.snakeTail = [this.snakeBody[this.snakeBody.length-1][0], this.snakeBody[this.snakeBody.length-1][1]];\n\n    this.moveSnake(0, this.headCord);\n\n    if (this.foodCord.length > 0) {\n      if(this.foodCord[0] === this.headCord[0] && this.foodCord[1] === this.headCord[1]) {\n        console.warn('FOOD EATEN!!!')\n        this.score++;\n        if (this.speed > 100) {\n          this.speed = this.speed-10;\n        }\n\n        d3.select(\"#score-count\")\n          .text(this.score)\n\n        d3.select('#food').remove();\n        this.foodOnBoard = false;\n\n        this.snakeBody.push(this.snakeTail)\n\n        d3.select('#board').append('rect')\n          .attr(\"class\", \"snake\")\n          .attr(\"id\", \"segment\" + (this.snakeBody.length-1))\n          .attr(\"width\", this.segmentDim)\n          .attr(\"height\", this.segmentDim)\n          .attr(\"x\", this.snakeTail[0])\n          .attr(\"y\", this.snakeTail[1])\n          .attr(\"ry\", this.segmentRadius)\n          .attr(\"rx\", this.segmentRadius)\n          .attr(\"fill\", \"purple\");\n      }\n    }\n\n    if(this.count%5 === 0 && !this.foodOnBoard) {\n      this.spawnFood();\n    }\n\n    // put bomb stuff in seperate function\n    if(this.snakeBombs === undefined) {\n      this.snakeBombs = new SnakeBombs(this);\n    }\n\n    // bomb tick\n    if (this.snakeBombs.liveBomb) {\n      //console.log('This bomb is ticking...', this.snakeBombs.bombCount)\n      // count down in seconds\n      let slowCount = Math.round(1000/this.speed);\n      if (+this.snakeBombs.bombCount > 0 && this.count%slowCount === 1) {\n        this.snakeBombs.bombCount = this.snakeBombs.bombCount - 1;\n        d3.select('#bomb-text')\n          .text(this.snakeBombs.bombCount)\n      } else if (this.snakeBombs.bombCount <= 0){\n        // boom\n        console.log(\"Boom!\")\n        this.snakeBombs.bombGoesBoom();\n      }\n    }\n\n    // spawn bomb\n    if(this.score > 0 && this.count%10 === 0 && !this.snakeBombs.liveBomb) {\n      this.snakeBombs.spawnBomb();\n    }\n\n    // losing conditions\n    if(this.headCord[0] >= this.boardWidth || this.headCord[0] < 0 // off the sides \n      || this.headCord[1] < 0 || this.headCord[1] >= this.boardHeight) { // off the top or bottom\n      console.log('Snakes out of the box!')\n      this.gameLost();\n      return\n    }\n    for (let segment of this.snakeBody) {\n      if (this.snakeBody.indexOf(segment) === 0) {\n        continue\n      }\n      if(this.headCord[0] === segment[0] && this.headCord[1] === segment[1]) {\n        console.log('You bit your own tail...')\n        this.gameLost()\n        return\n      }\n    }\n\n    let that = this;\n    this.gameTicker = setTimeout(function() {\n      that.gameTick()\n    }, that.speed);\n  }\n\n}\n\nclass SnakeBombs {\n  constructor(snakeGame) {\n    this.snakeGame = snakeGame;\n\n    this.bombCord = [];\n    this.liveBomb = false;\n    this.bombCount = 0;\n    this.explosionRadius = 2;\n  }\n\n  spawnBomb() {\n    this.bombCord = this.snakeGame.randomBoardCord();\n    this.bombCount = 5;\n    d3.select('#board').append('rect')\n      .attr(\"id\", \"bomb\")\n      .attr(\"width\", this.snakeGame.segmentDim)\n      .attr(\"height\", this.snakeGame.segmentDim)\n      .attr(\"x\", this.bombCord[0])\n      .attr(\"y\", this.bombCord[1])\n      .attr(\"ry\", this.snakeGame.segmentRadius)\n      .attr(\"rx\", this.snakeGame.segmentRadius)\n      .attr(\"fill\", \"orange\")\n      .style(\"opacity\", 0)\n      .attr(\"stroke\", \"red\")\n      .transition()\n      .duration(1000)\n      .style(\"opacity\", 1)\n\n    d3.select('#board').append('text')\n      .attr('id', 'bomb-text')\n      .text(this.bombCount)\n      .style('fill', 'black')\n      .style('font-size', '65%')\n      .attr(\"transform\", \"translate(\"+(this.bombCord[0]+this.snakeGame.segmentDim/4)+\",\"+(this.bombCord[1]+this.snakeGame.segmentDim-1)+\")\");\n\n    this.liveBomb = true;\n  }\n\n  bombGoesBoom () {\n    \n    let colorScale = d3.scaleLinear()\n      .domain([0, this.explosionRadius])\n      .range(['red', 'yellow']);\n\n    let explosionArea = [];\n    for(let i = 1; i <= this.explosionRadius; i++) {\n      let start = this.bombCord;\n      for(let xDim = -i; xDim <= i; xDim++) {\n        for(let yDim = -i; yDim <= i; yDim++) {\n          let newX = start[0] + (xDim*this.snakeGame.segmentDim)\n          let newY = start[1] + (yDim*this.snakeGame.segmentDim)\n          let newCord = [newX, newY];\n          if(!explosionArea.includes(newCord)) {\n            explosionArea.push(newCord)\n          }\n        }\n      }\n    }\n    for(let block of explosionArea) {\n      // distance in block units\n      let distance = distanceBetweenPoints(this.bombCord, block)/this.snakeGame.segmentDim\n\n      d3.select('#board').append('rect')\n        .attr(\"class\", \"boom\")\n        .attr(\"width\", this.snakeGame.segmentDim)\n        .attr(\"height\", this.snakeGame.segmentDim)\n        .attr(\"x\", block[0])\n        .attr(\"y\", block[1])\n        .attr(\"ry\", this.snakeGame.segmentRadius)\n        .attr(\"rx\", this.snakeGame.segmentRadius)\n        .attr(\"fill\", colorScale(distance))\n        .style(\"opacity\", 1)\n        .attr(\"stroke\", \"red\")\n        .transition()\n        .duration(1500)\n        .style(\"opacity\", 0)\n        .attr(\"fill\", \"blue\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .remove();\n    }\n\n    d3.select('#bomb-text').remove();\n    d3.select('#bomb')\n      .transition()\n      .duration(1500)\n      .style(\"opacity\", 0)\n      .remove();\n\n    this.bombCount = 0;\n    this.liveBomb = false;\n\n    this.isHeadInExplosion()\n  }\n\n  isHeadInExplosion() {\n    let bombR = this.explosionRadius;\n    let segDim = this.snakeGame.segmentDim;\n    let explosionXRange = [this.bombCord[0]-segDim*bombR, this.bombCord[0]+segDim*bombR];\n    let explosionYRange = [this.bombCord[1]-segDim*bombR, this.bombCord[1]+segDim*bombR];\n    let detectX = this.snakeGame.headCord[0] >= explosionXRange[0] && this.snakeGame.headCord[0] <= explosionXRange[1];\n    let detectY = this.snakeGame.headCord[1] >= explosionYRange[0] && this.snakeGame.headCord[1] <= explosionYRange[1];\n    if (detectX && detectY) {\n      console.log(\"Ouch, killed by a bomb...\")\n      this.snakeGame.gameLost();\n    }\n  }\n  \n}\n\nfunction distanceBetweenPoints (pointA, pointB) {\n  let x0 = pointA[0];\n  let x1 = pointB[0];\n  let y0 = pointA[1];\n  let y1 = pointB[1];\n  let x = Math.pow((x1-x0), 2);\n  let y = Math.pow((y1-y0), 2)\n  let distance = Math.pow((x + y), 0.5);\n\n  return distance;\n}\n\nlet snakeGame = new SnakeGame();\nexport function startSnakeGame() {\n  console.log('startSnakeGame: Start game!!')\n  snakeGame.initGame()\n}\n\nexport function pauseSnakeGame() {\n  if (snakeGame.paused) {\n    snakeGame.paused = false;\n    snakeGame.gameTick();\n  } else {\n    snakeGame.paused = true;\n  }\n\n}\n","import React from \"react\"\nimport './App.css';\nimport { startSnakeGame, pauseSnakeGame } from './SnakeApp.js';\n\n\nfunction startGame () {\n\tstartSnakeGame();\n}\n\nfunction pauseGame () {\n\tpauseSnakeGame();\n}\n\nclass PauseGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isPaused: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isPaused: !state.isPaused\n    }));\n    if(this.state) {\n    \tpauseGame();\n    }\n  }\n\n  render() {\n    return (\n    \t<div id=\"pause-game\">\n\t      <button onClick={this.handleClick}\n\t      \t\t\t\tclassName=\"btn\">\n\t        {this.state.isPaused ? 'pause' : 'resume!'}\n\t      </button>\n\t    </div>\n    );\n  }\n}\n\nfunction Snake(props) {\n  return (\n    <div className=\"container-fluid snake-container\" id=\"snake-game\">\n    \t<div className=\"row\">\n\t      <div className=\"col-sm\">\n\t      \t<h1>Snake</h1>\n\t\t      <div id=\"game-space\">\n\t\t      \t<svg id=\"board\" width=\"300px\" height=\"300px\">\n\t\t      \t\t<text className=\"game-intro\" \n\t\t      \t\t\t\t\tdx=\"150px\" \n\t\t      \t\t\t\t\tdy=\"5em\">\n\t\t      \t\t\tUse the arrow keys,\n\t\t      \t\t</text>\n\t\t      \t\t<text className=\"game-intro\" \n\t\t      \t\t\t\t\tdx=\"150px\" \n\t\t      \t\t\t\t\tdy=\"7em\">\n\t\t      \t\t\teat green apples,\n\t\t      \t\t</text>\n\t\t      \t\t<text className=\"game-intro\" \n\t\t      \t\t\t  \tdx=\"150px\" \n\t\t      \t\t\t\t\tdy=\"9em\">\n\t\t      \t\t\tand avoid the bombs!!\n\t\t      \t\t</text>\n\t\t      \t</svg>\n\t\t      </div>\n\t\t      <div id=\"score\">\n\t\t      \tscore: <span id=\"score-count\"></span>\n\t\t      </div>\n\t\t      <PauseGame/>\n\t\t      <div id=\"start-game\">\n\t\t        <button className=\"btn btn-primary\"\n\t\t        \t\t\t  onClick={startGame}>\n\t\t        \tStart Game\n\t\t        </button>\n\t\t      </div>\n\t\t    </div>\n\t    </div>\n\t    <div className=\"col-sm\">\n\t    \t<a href='https://github.com/williamvennard/wills-page'>Checkout this project on GitHub </a>\n\t    </div>\n    </div>\n  )\n}\n \nexport default Snake;","import React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\n// import SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nGeocode.setApiKey(\"AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I\");\nGeocode.enableDebug();\n\n\n\n\n\n\n\n\n\n\n\nclass Map extends React.Component{\n  constructor(props){\n    super( props );\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    }\n  }\n  /**\n    * Get the current address from the default map position and set those values in the state\n    */\n  componentDidMount() {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      let that = this;\n      navigator.geolocation.getCurrentPosition(function(position) {\n        that.state.mapPosition.lat = position.coords.latitude;\n        that.state.mapPosition.lng = position.coords.longitude;\n        that.next()\n      }, function() {\n        console.warn(\"getCurrentPosition: Error!\")\n      });\n    } else {\n      // Browser doesn't support Geolocation\n      console.warn(\"Browser doesn't support Geolocation\")\n    }\n\n    \n  };\n\n  next() {\n    Geocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\n      response => {\n        const address = response.results[0].formatted_address,\n        addressArray =  response.results[0].address_components,\n        city = this.getCity( addressArray ),\n        area = this.getArea( addressArray ),\n        state = this.getState( addressArray );\n        console.log( 'city', city, area, state );\n    \n        this.setState( {\n          address: ( address ) ? address : '',\n          area: ( area ) ? area : '',\n          city: ( city ) ? city : '',\n          state: ( state ) ? state : '',\n        } )\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  /**\n    * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n    *\n    * @param nextProps\n    * @param nextState\n    * @return {boolean}\n    */\n  shouldComponentUpdate( nextProps, nextState ){\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address ||\n      this.state.city !== nextState.city ||\n      this.state.area !== nextState.area ||\n      this.state.state !== nextState.state\n    ) {\n      return true\n    } else if ( this.props.center.lat === nextProps.center.lat ){\n      return false\n    }\n  }\n  /**\n    * Get the city and set the city input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */\n  getCity = ( addressArray ) => {\n    console.warn(\"getCity: addressArray\", addressArray)\n    let city = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n        city = addressArray[ i ].long_name;\n        return city;\n      }\n    }\n  };\n  /**\n    * Get the area and set the area input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */\n  getArea = ( addressArray ) => {\n    let area = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      if ( addressArray[ i ].types[0]  ) {\n        for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n          if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\n            area = addressArray[ i ].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n  /**\n    * Get the address and set the address input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */\n  getState = ( addressArray ) => {\n    let state = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      for( let i = 0; i < addressArray.length; i++ ) {\n        if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n          state = addressArray[ i ].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  /**\n    * And function for city,state and address input\n    * @param event\n    */\n  onChange = ( event ) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n    * This Event triggers when the marker window is closed\n    *\n    * @param event\n    */\n  onInfoWindowClose = ( event ) => {\n    console.warn(\"Infow window has been closed!!!\", event)\n  };\n  /**\n    * When the user types an address in the search box\n    * @param place\n    */\n  onPlaceSelected = ( place ) => {\n    console.warn(\"place =\", place)\n    const address = place.formatted_address,\n    addressArray =  place.address_components,\n    city = this.getCity( addressArray ),\n    area = this.getArea( addressArray ),\n    state = this.getState( addressArray ),\n    latValue = place.geometry.location.lat(),\n    lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: ( address ) ? address : '',\n      area: ( area ) ? area : '',\n      city: ( city ) ? city : '',\n      state: ( state ) ? state : '',\n      markerPosition: {\n      lat: latValue,\n      lng: lngValue\n    },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n    })\n  };\n  /**\n    * When the marker is dragged you get the lat and long using the functions available from event object.\n    * Use geocode to get the address, city, area and state from the lat and lng positions.\n    * And then set those values in the state.\n    *\n    * @param event\n    */\n  onMarkerDragEnd = ( event ) => {\n    console.log( 'event', event );\n    let newLat = event.latLng.lat(),\n    newLng = event.latLng.lng(),\n    addressArray = [];\n    Geocode.fromLatLng( newLat , newLng ).then(\n      response => {\n        const address = response.results[0].formatted_address,\n        addressArray =  response.results[0].address_components,\n        city = this.getCity( addressArray ),\n        area = this.getArea( addressArray ),\n        state = this.getState( addressArray );\n        this.setState( {\n          address: ( address ) ? address : '',\n          area: ( area ) ? area : '',\n          city: ( city ) ? city : '',\n          state: ( state ) ? state : ''\n        } )\n      },\n     error => {\n      console.error(error);\n     }\n    );\n  };\n  render(){\n    const AsyncMap = withScriptjs(\n      withGoogleMap(\n        props => (\n          <GoogleMap google={ this.props.google }\n            defaultZoom={ this.props.zoom }\n            defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n          >\n            \n            \n\n            <Marker \n              google={ this.props.google }\n              name={'Dolores park'}\n              draggable={true}\n              onDragEnd={ this.onMarkerDragEnd }\n              position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n            />\n            <Marker />\n            <InfoWindow\n              onClose={ this.onInfoWindowClose }\n              position={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\n            >\n              <div>\n                <span style={{ padding: 0, margin: 0, color: 'black'}}>{ this.state.address }</span>\n              </div>\n            </InfoWindow>\n          </GoogleMap>\n        )\n      )\n    );\n    let map;\n    if( this.props.center.lat !== undefined ) {\n      map = <div className=\"col\">\n        <AsyncMap\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n          loadingElement={\n            <div style={{ height: `100%` }} />\n          }\n          containerElement={\n            <div style={{ height: this.props.height, width: `100%` }} />\n          }\n          mapElement={\n            <div style={{ height: `100%` }} />\n          }\n        />\n        <div style={{ 'marginTop': `50px`, 'marginBottom': `50px` }}>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">City</label>\n            <input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">Area</label>\n            <input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">State</label>\n            <input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">Address</label>\n            <input type=\"text\" name=\"address\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.address }/>\n          </div>\n        </div>\n      </div>\n    } else {\n      map = <div style={{ height: this.props.height }} />\n    }\n    return( map )\n  }\n}\nexport default Map\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={ 8 }\n    center={props.center}\n  >\n  </GoogleMap>\n))\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.showPosition = (position) => {\n        const places = [];  \n        const firstPlace = {};\n        const firstPlaceLat = position.coords.latitude;\n        const firstPlaceLng = position.coords.longitude;\n\n        this.setState({\n          places, firstPlace, firstPlaceLat, firstPlaceLng\n        });\n      }\n      this.getCurrentLocation = function () {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n          console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\")\n        }\n      }\n\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 39.74,\n        firstPlaceLng: -104.991531,\n        zoon: 10,\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n          this.getCurrentLocation();\n        },\n       \n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();      \n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat()\n          const firstPlaceLng = firstPlace.geometry.location.lng()\n          this.setState({\n            places, firstPlace, firstPlaceLat, firstPlaceLng\n          });\n        }\n      });\n\n    }    \n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </StandaloneSearchBox>\n    <MyMapComponent\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n      containerElement={\n        <div style={{ height: `400px`, width: `100%` }} />\n      }\n      mapElement={\n        <div style={{ height: `100%` }} />\n      }    \n      loadingElement={\n        <div style={{ height: `100%` }} />\n      }\n      center={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n    />\n  </div>\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst containerStyles = {\n  width: '100%',\n};\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\" style={{display: 'none'}}>\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot \n              to generate an itinerary. Planit will show you transportation, lodging and \n              possible points of interest in the areas of travel including an estimated price \n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <PlacesWithStandaloneSearchBox/>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapContainer\n","import React from \"react\"\nimport './App.css';\nimport Img from './images/blue-man.jpg';\n \nfunction About(props) {\n  return (\n    <div className=\"container-fluid about-container\">\n    \t<div className=\"row\">\n    \t\t<div className=\"col-6\">\n\t\t      <h1>About Me</h1>\n\t\t\t    <p>Hello there, welcome to my website!</p>\n\t\t\t    <p>\n\t\t\t        \n\t\t\t    </p>\n\t\t\t    <p>The tools I like to use are:</p>\n\t\t\t    <ul>\n\t\t\t\t  \t<li>Angular</li>\n\t\t\t\t  \t<li>React</li>\n\t\t\t\t  \t<li>D3</li>\n\t\t\t\t  \t<li>Bootstrap</li>\n\t\t\t\t\t</ul>\n\t\t\t    <p>\n\t\t\t    \tFor more information about GradientOne, where I work, click <a href=\"https://www.gradientone.com/\">here</a>.\n\t\t\t    </p>\n\t\t    </div>\n\t\t    <div className=\"col-6\">\n\t\t    \t<img src={Img} alt=\"Fish\" style={{ width: `600px` }}/>\n\t\t    </div>\n\t    </div>\n    </div>\n  )\n}\n \nexport default About;","import React from \"react\"\nimport './App.css';\n\nfunction Footer(props) {\n  return (\n    <div>\n      <footer className=\"footer\">\n\t      <div className=\"row\">\n\t        <div className=\"col\">\n\t          <a href=\"https://www.linkedin.com/in/wvennard/\">\n\t            <svg className=\"socialIcon\" aria-labelledby=\"simpleicons-linkedin-icon\" role=\"img\" viewBox=\"0 0 24 24\"><title id=\"simpleicons-linkedin-icon\">LinkedIn icon</title><path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/></svg>\n\t          </a>\n\t        </div>\n\t        <div className=\"col\"> \n\t          <a href=\"https://github.com/williamvennard\">\n\t            <svg className=\"socialIcon\" aria-labelledby=\"simpleicons-github-icon\" role=\"img\" viewBox=\"0 0 25 25\"><title id=\"simpleicons-github-icon\">GitHub icon</title><path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg>\n\t          </a>\n\t        </div>\n\t        <span id=\"copyright\">&copy;2020 William Vennard</span>\n\t      </div>\n\t    </footer>\n    </div>\n  )\n}\n \nexport default Footer;","import React from 'react';\n\n// Import the HashRouter, Route and Link components\n// HashRouter is needed in order to be hosted on github\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport ScrollableAnchor from 'react-scrollable-anchor';\n\n// import Background from './images/water-background.jpg';\n// import Background from './images/red-fish.jpg';\n\nimport Home from './Home.js';\nimport Projects from './Projects.js';\nimport Snake from './Snake.js';\nimport Planit from './Planit.js';\nimport About from './About.js';\nimport Footer from './Footer.js';\nimport './App.css';\n\n\nlet backgroundStyle = {\n  // backgroundImage: `url(${Background})`,\n  backgroundAttachment: 'fixed',\n  backgroundSize: `100%`\n};\n\nfunction MainContent() {\n  return (\n    <div>\n      <Home></Home>\n\n      <ScrollableAnchor id={'/#projects'}>\n        <div>\n          <Projects/>\n        </div>\n      </ScrollableAnchor>\n\n      <ScrollableAnchor id={'/#about'}>\n        <div>\n          <About/>\n        </div>\n      </ScrollableAnchor>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div className=\"App\" style={ backgroundStyle }>\n        <nav className=\"navbar header\">\n          <ul className=\"nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"item\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/#projects\" className=\"item\">Projects</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/#about\" className=\"item\">About</Link>\n            </li>\n          </ul>\n        </nav>\n        <Route path=\"/snake\"  component={ Snake } />\n        <Route path=\"/planit\"  component={ Planit } />\n        <Route exact path=\"/\"  component={ MainContent } />\n\n        <Footer></Footer>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}